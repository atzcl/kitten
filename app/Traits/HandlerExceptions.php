<?phpdeclare(strict_types = 1);/*+-----------------------------------------------------------------------------------------------------------------------| Author: 植成樑 <atzcl0310@gmail.com>  Blog：https://www.atzcl.cn+-----------------------------------------------------------------------------------------------------------------------| 判断异常，然后返回自定义 code / message|*/namespace App\Traits;use Exception;use Illuminate\Validation\ValidationException;use Symfony\Component\HttpKernel\Exception\HttpException;trait HandlerExceptions{    /**     * 判断异常，然后返回自定义 code / message     *     * @param Exception $exception 异常对象     * @return array     */    public function handlerExceptions(Exception $exception): array    {        $errorCode = method_exists($exception, 'getStatusCode') ? (int) $exception->getStatusCode() : 500;        $errorMessage = $exception->getMessage();        // http 类型异常        if ($exception instanceof HttpException) {            $errorMessage = $exception->getMessage();        }        // 验证器异常        if ($exception instanceof ValidationException) {            $errorCode = 422;            $errorMessage = array_first(array_collapse($exception->errors()));        }        // 判断错误代码是否为 500，并且运行环境是否是本地（local），如果是的话，那么就抛出真实的错误信息        // 如果不是，那么应该屏蔽真实错误信息，避免安全问题        if ($errorCode === 500 && config('app.env') !== 'local') {            $errorMessage = '内部错误，请联系后端工程师 ─=≡Σ(((つ•̀ω•́)つ';        }        // 返回结果        return [$errorCode, $errorMessage];    }}